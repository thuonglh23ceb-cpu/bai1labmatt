package com.example.demo

import kotlin.math.PI

// ----- Lớp trừu tượng -----
abstract class Dwelling(val residents: Int) {
    abstract val buildingMaterial: String
    abstract fun floorArea(): Double

    open fun hasRoom(): Boolean {
        return residents < 5
    }
}

// ----- Lớp mở có thể kế thừa -----
open class RoundHut(residents: Int) : Dwelling(residents) {
    override val buildingMaterial = "Straw"
    override fun floorArea(): Double {
        return PI * 2.0 * 2.0 // ví dụ diện tích hình tròn r=2
    }
}

// ----- Lớp con kế thừa từ Dwelling -----
class SquareCabin(residents: Int, val floors: Int = 1) : Dwelling(residents) {
    override val buildingMaterial = "Wood"
    override fun floorArea(): Double {
        // gọi lại lớp cha (nếu cần)
        return 5.0 * 5.0 * floors
    }
}

// ----- Hàm chính -----
fun main() {
    // Tạo đối tượng
    val roundHut = RoundHut(3)
    val squareCabin = SquareCabin(4, 2)

    // with để truy cập dễ dàng
    with(squareCabin) {
        println("Capacity check: ${hasRoom()}")
        println("Material: $buildingMaterial")
        println("Floor area: ${floorArea()}")
    }

    // Danh sách chỉ đọc
    val numbers = listOf(1, 2, 3, 4, 5, 6)
    println("Size of numbers = ${numbers.size}")
    println("First number = ${numbers[0]}")
    println("Reversed = ${numbers.reversed()}")

    // Danh sách có thể thay đổi
    val entrees = mutableListOf<String>()
    entrees.add("spaghetti")
    entrees[0] = "lasagna"
    entrees.remove("lasagna")
    println("Entrees: $entrees")

    // Vòng lặp for
    for (n in numbers) {
        println("Number: $n")
    }

    // Vòng lặp while
    var index = 0
    while (index < numbers.size) {
        println("While loop number: ${numbers[index]}")
        index++
    }

    // Chuỗi
    val name = "Android"
    println("Length of name = ${name.length}")

    val number = 10
    val groups = 5
    println("$number people")
    println("${number * groups} people")

    // Toán tử gán tăng cường
    var a = 10
    var b = 2
    a += b
    a *= b
    println("a = $a")

    // Tính diện tích hình tròn
    val radius = 3.0
    val circleArea = kotlin.math.PI * radius * radius
    println("Circle area = $circleArea")

    // Hàm có vararg
    fun addToppings(vararg toppings: String) {
        println("Toppings: ${toppings.joinToString()}")
    }
    addToppings("Cheese", "Tomato", "Olives")
}
